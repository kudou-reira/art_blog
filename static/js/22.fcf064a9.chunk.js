(this.webpackJsonpportfolio=this.webpackJsonpportfolio||[]).push([[22],{512:function(e,t,n){"use strict";n.r(t),n.d(t,"readingTime",(function(){return o})),n.d(t,"default",(function(){return c})),n.d(t,"tableOfContents",(function(){return l})),n.d(t,"frontMatter",(function(){return s}));var r=n(613),a=(n(0),n(612)),o={text:"1 min read",minutes:.69,time:41400,words:138},i={};function c(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.a)("wrapper",Object.assign({},i,n,{components:t,mdxType:"MDXLayout"}),Object(a.a)("p",null,"The application itself was built using the Electron framework. It has a flexbox display for the front-end. Under the hood, GraphQL queries are made using redux and then listeners in the Electron node framework wait to update the windows with new information."),Object(a.a)("p",null,"I added various sort parameters as well as queried specific values. In particular, I wanted the \u201ctime until next episode airs\u201d to be clearly visible. As I live in Japan, and Japanese anime airs on JST (Japanese Standard Time), I wanted to see exactly when I could view the shows live."),Object(a.a)("p",null,"Aside from that, I added features that would allow users to search past seasons and years (and future seasons, if available) as well as filter lists by TV Series, OVA (Original Video Animation). In addition, I put in a sidebar that showed recently aired episodes."))}c.isMDXComponent=!0;var l=function(){return[]},s={}},612:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"===typeof e?e(t):c(c({},t),e)),n},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},f=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=u(n),d=r,y=f["".concat(i,".").concat(d)]||f[d]||p[d]||o;return n?a.a.createElement(y,c(c({ref:t},s),{},{components:n})):a.a.createElement(y,c({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var o=n.length,i=new Array(o);i[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"===typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},613:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}n.d(t,"a",(function(){return r}))}}]);
//# sourceMappingURL=22.fcf064a9.chunk.js.map