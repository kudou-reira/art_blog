(this.webpackJsonpportfolio=this.webpackJsonpportfolio||[]).push([[71],{540:function(e,t,r){"use strict";r.r(t),r.d(t,"readingTime",(function(){return a})),r.d(t,"default",(function(){return c})),r.d(t,"tableOfContents",(function(){return u})),r.d(t,"frontMatter",(function(){return p}));var n=r(578),o=(r(0),r(577)),a={text:"1 min read",minutes:.37,time:22200,words:74},i={};function c(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(o.a)("wrapper",Object.assign({},i,r,{components:t,mdxType:"MDXLayout"}),Object(o.a)("p",null,"I used the same structure of my previous semantic segmentation project. However, I replaced the machine learning portion with my own implementation of neural style transfer using Keras and a pretrained model of VGG-16. As it was a hackathon, I had to make use of the available resources (pre-trained models) instead of training from scratch. Rewriting TensorFlow code in Keras format was good practice as TensorFlow 2.0 has switched to Keras as a wrapper."))}c.isMDXComponent=!0;var u=function(){return[]},p={}},577:function(e,t,r){"use strict";r.d(t,"a",(function(){return m}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=o.a.createContext({}),s=function(e){var t=o.a.useContext(p),r=t;return e&&(r="function"===typeof e?e(t):c(c({},t),e)),r},f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},l=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),l=s(r),m=n,y=l["".concat(i,".").concat(m)]||l[m]||f[m]||a;return r?o.a.createElement(y,c(c({ref:t},p),{},{components:r})):o.a.createElement(y,c({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"===typeof e||n){var a=r.length,i=new Array(a);i[0]=l;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"===typeof e?e:n,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}l.displayName="MDXCreateElement"},578:function(e,t,r){"use strict";function n(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}r.d(t,"a",(function(){return n}))}}]);
//# sourceMappingURL=71.7a9dc638.chunk.js.map