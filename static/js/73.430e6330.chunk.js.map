{"version":3,"sources":["portfolio_images/anime_charts/final/final.mdx","portfolio_images/anime_charts/final/images/anicharts_demo.mp4"],"names":["readingTime","layoutProps","MDXContent","components","props","mdxType","url","videoURL","controls","ImageGallery","isMDXComponent","tableOfContents","frontMatter","module","exports"],"mappings":"iWAGaA,EAAc,CAAC,KAAO,aAAa,QAAU,KAAM,KAAO,MAAM,MAAQ,IAM/EC,EAAc,GAIL,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,sTACA,YAAC,IAAD,CAAaC,IAAKC,IAAUC,UAAU,EAAMH,QAAQ,gBACpD,uBAAMD,EAAMK,eAKhBP,EAAWQ,gBAAiB,EACrB,IAAMC,EAAkB,iBAAmB,IAIrCC,EAAc,I,oBC/B3BC,EAAOC,QAAU,IAA0B","file":"static/js/73.430e6330.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.305,\"time\":18300,\"words\":61}\n/* @jsx mdx */\nimport ReactPlayer from 'react-player'\nimport videoURL from './images/anicharts_demo.mp4';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`The final output is an Electron application that should supposedly run on all platforms (ex. Windows, Mac, Linux). I don’t have a Mac, so I’ve only packed it for my default OS, Windows. I’ve also included a short demo video that shows how to use its basic functionality.`}</p>\n    <ReactPlayer url={videoURL} controls={true} mdxType=\"ReactPlayer\" />\n    <div>{props.ImageGallery}</div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","module.exports = __webpack_public_path__ + \"static/media/anicharts_demo.7c9f049c.mp4\";"],"sourceRoot":""}